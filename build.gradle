buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'codechicken'
        url "http://chickenbones.net/maven/"
    }
    ivy {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-([classifier]-)[revision].[ext]"
    }
    ivy {
        name "CoFHCore"
        artifactPattern "http://addons-origin.cursecdn.com/files/${cofhpath}/[module]-[revision]-[classifier].[ext]"
    }
    ivy {
        name "Baubles"
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-[classifier]-1.7.10-[revision].[ext]"
    }
    ivy {
        name = 'Thaumcraft'
        artifactPattern 'https://dl.dropboxusercontent.com/u/47135879/[module](-[classifier])-1.7.10-[revision](.[ext])'
    }
    ivy {
        name = "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-[classifier].[ext]"
    }
}

apply plugin: 'forge'

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-${mod_version}-${build_number}"


minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "eclipse"
    replace '${version}', project.version

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

dependencies {
    compile "Azanor:Baubles:${baubles_version}:deobf@jar"
    compile "Vazkii:Botania:${botania_version_major}-${botania_version_minor}:deobf@jar"
    compile name: "CodeChickenLib"    , group: "codechicken", version: "${mc_version}-${ccl_version}", classifier: "dev"
    compile name: "CodeChickenCore"   , group: "codechicken", version: "${mc_version}-${ccc_version}", classifier: "dev"
    compile name: 'CoFHCore', version: "[${mc_version}]${cofhcore_version}", classifier: 'dev'
    compile "mantle:Mantle:${mc_version}-${mantle_version}:deobf"
    compile name: "MineTweaker3"      , group: "minetweaker", version: "${mc_version}-${minetweaker_version}", classifier: "Dev"
    compile name: "NotEnoughItems"    , group: "codechicken", version: "${mc_version}-${nei_version}", classifier: "dev"
    compile "tconstruct:TConstruct:${mc_version}-${tconstruct_version}:deobf"
    compile "Azanor:Thaumcraft:${thaumcraft_version}:deobf@jar"
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}



// Source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// Javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// Deobfuscated jar
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}
